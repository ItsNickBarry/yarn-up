#!/usr/bin/env node
             
const path = require('path');
const child_process = require('child_process');
const stream = require('stream');
const os = require('os');             const p=path.resolve;const u=child_process.spawn;const v=(a,b,c,e=!1,h=!1)=>{const d=c?new RegExp(`^-(${c}|-${b})$`):new RegExp(`^--${b}$`);b=a.findIndex(f=>d.test(f));if(-1==b)return{argv:a};if(e)return{value:!0,index:b,length:1};e=a[b+1];if(!e||"string"==typeof e&&e.startsWith("--"))return{argv:a};h&&(e=parseInt(e,10));return{value:e,index:b,length:2}},w=a=>{const b=[];for(let c=0;c<a.length;c++){const e=a[c];if(e.startsWith("-"))break;b.push(e)}return b};const x=function(a={},b=process.argv){let [,,...c]=b;const e=w(c);c=c.slice(e.length);a=Object.entries(a).reduce((f,[k,l])=>{f[k]="string"==typeof l?{short:l}:l;return f},{});const h=[];a=Object.entries(a).reduce((f,[k,l])=>{let g;try{const m=l.short,G=l.boolean,H=l.number,q=l.command,I=l.multiple;if(q&&I&&e.length)g=e;else if(q&&e.length)g=e[0];else{const n=v(c,k,m,G,H);({value:g}=n);const r=n.index,t=n.length;void 0!==r&&t&&h.push({index:r,length:t})}}catch(m){return f}return void 0===g?f:{...f,
[k]:g}},{});let d=c;h.forEach(({index:f,length:k})=>{Array.from({length:k}).forEach((l,g)=>{d[f+g]=null})});d=d.filter(f=>null!==f);Object.assign(a,{f:d});return a}({exclude:{description:"Comma-separated packages to exclude.",short:"e"},upgrade:{description:"Run `yarn upgrade` after the update.",boolean:!0,short:"u"}}),y=x.exclude,z=x.upgrade;const A=stream.Writable;const B=(a,b=0,c=!1)=>{if(0===b&&!c)return a;a=a.split("\n",c?b+1:void 0);return c?a[a.length-1]:a.slice(b).join("\n")},C=(a,b=!1)=>B(a,2+(b?1:0)),D=a=>{({callee:{caller:a}}=a);return a};const E=os.homedir;const F=/\s+at.*(?:\(|\s)(.*)\)?/,J=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:IGNORED_MODULES)\/.*)?\w+)\.js:\d+:\d+)|native)/,K=E(),L=a=>{const {pretty:b=!1,ignoredModules:c=["pirates"]}={},e=c.join("|"),h=new RegExp(J.source.replace("IGNORED_MODULES",e));return a.replace(/\\/g,"/").split("\n").filter(d=>{d=d.match(F);if(null===d||!d[1])return!0;d=d[1];return d.includes(".app/Contents/Resources/electron.asar")||d.includes(".app/Contents/Resources/default_app.asar")?!1:!h.test(d)}).filter(d=>
d.trim()).map(d=>b?d.replace(F,(f,k)=>f.replace(k,k.replace(K,"~"))):d).join("\n")};function M(a,b,c=!1){return function(e){var h=D(arguments),{stack:d}=Error();const f=B(d,2,!0),k=(d=e instanceof Error)?e.message:e;h=[`Error: ${k}`,...null!==h&&a===h||c?[b]:[f,b]].join("\n");h=L(h);return Object.assign(d?e:Error(),{message:k,stack:h})}};function N(a){var {stack:b}=Error();const c=D(arguments);b=C(b,a);return M(c,b,a)};const O=(a,b)=>{b.once("error",c=>{a.emit("error",c)});return b};class P extends A{constructor(a){const {binary:b=!1,rs:c=null,...e}=a||{},{c:h=N(!0),proxyError:d}=a||{},f=(k,l)=>h(l);super(e);this.a=[];this.b=new Promise((k,l)=>{this.on("finish",()=>{let g;b?g=Buffer.concat(this.a):g=this.a.join("");k(g);this.a=[]});this.once("error",g=>{if(-1==g.stack.indexOf("\n"))f`${g}`;else{const m=L(g.stack);g.stack=m;d&&f`${g}`}l(g)});c&&O(this,c).pipe(this)})}_write(a,b,c){this.a.push(a);c()}get promise(){return this.b}}
const Q=async a=>{({promise:a}=new P({rs:a,c:N(!0)}));return await a};const R=async a=>{const [b,c,e]=await Promise.all([new Promise((h,d)=>{a.on("error",d).on("exit",f=>{h(f)})}),a.stdout?Q(a.stdout):void 0,a.stderr?Q(a.stderr):void 0]);return{code:b,stdout:c,stderr:e}};function S(a){a=u("yarn",a,{shell:"win32"==process.platform,stdio:"inherit"});const b=R(a);a.promise=b;a.spawnCommand=a.spawnargs.join(" ");return a};async function T(a=[]){var b=U;if(null===b||void 0===b)throw Error("Package.json content is not given");const {devDependencies:c,dependencies:e}=b,h={...c,...e};b=Object.keys(h).filter(k=>!a.includes(k));const [d,f]=b.reduce(([k,l],g)=>{/^\d/.test(h[g])?k.push(g):l.push(g);return[k,l]},[[],[]]);d.length&&await V(d,!0);f.length&&await V(f)}const V=async(a,b=!1)=>{a=["upgrade",...a.map(c=>`${c}@latest`),...b?["-E"]:[]];process.stdout.write(["yarn",...a,"\n"].join(" "));({promise:a}=S(a));await a};const U=require(p(process.cwd(),"package.json"));(async()=>{try{await T(y?y.split(","):void 0),z&&u("yarn",["upgrade"])}catch(a){console.log(a)}})();

//# sourceMappingURL=yarn-up.js.map
#!/usr/bin/env node
             
const path = require('path');
const child_process = require('child_process');
const stream = require('stream');
const os = require('os');             const u=path.resolve;const v=child_process.spawn;const w=(a,b,c,d=!1,g=!1)=>{const f=c?new RegExp(`^-(${c}|-${b})$`):new RegExp(`^--${b}$`);b=a.findIndex(h=>f.test(h));if(-1==b)return{argv:a};if(d)return{value:!0,index:b,length:1};d=a[b+1];if(!d||"string"==typeof d&&d.startsWith("--"))return{argv:a};g&&(d=parseInt(d,10));return{value:d,index:b,length:2}},z=a=>{const b=[];for(let c=0;c<a.length;c++){const d=a[c];if(d.startsWith("-"))break;b.push(d)}return b},B=()=>{var a=A;return Object.keys(a).reduce((b,c)=>{const d=a[c];if("string"==typeof d)return b[`-${d}`]=
"",b;c=d.command?c:`--${c}`;d.short&&(c=`${c}, -${d.short}`);let g=d.description;d.default&&(g=`${g}\nDefault: ${d.default}.`);b[c]=g;return b},{})};function C(){var a={description:"Upgrade all dependencies to the next version.",example:"yarn-up -e preact",line:"yarn-up [-e packageA,packageB] [-u] [-hv]",usage:B()};const {usage:b={},description:c,line:d,example:g}=a;a=Object.keys(b);const f=Object.values(b),[h]=a.reduce(([e=0,m=0],n)=>{const r=b[n].split("\n").reduce((p,q)=>q.length>p?q.length:p,0);r>m&&(m=r);n.length>e&&(e=n.length);return[e,m]},[]),k=(e,m)=>{m=" ".repeat(m-e.length);return`${e}${m}`};a=a.reduce((e,m,n)=>{n=f[n].split("\n");
m=k(m,h);const [r,...p]=n;m=`${m}\t${r}`;const q=k("",h);n=p.map(t=>`${q}\t${t}`);return[...e,m,...n]},[]).map(e=>`\t${e}`);const l=[c,`  ${d||""}`].filter(e=>e?e.trim():e).join("\n\n");a=`${l?`${l}\n`:""}
${a.join("\n")}
`;return g?`${a}
  Example:

    ${g}
`:a};const A={exclude:{description:"Comma-separated packages to exclude.",short:"e"},upgrade:{description:"Run `yarn upgrade` after the update.",boolean:!0,short:"u"},help:{description:"Display usage information.",boolean:!0,short:"h"},version:{description:"Show version number.",boolean:!0,short:"v"}},D=function(a={},b=process.argv){let [,,...c]=b;const d=z(c);c=c.slice(d.length);a=Object.entries(a).reduce((h,[k,l])=>{h[k]="string"==typeof l?{short:l}:l;return h},{});const g=[];a=Object.entries(a).reduce((h,
[k,l])=>{let e;try{const m=l.short,n=l.boolean,r=l.number,p=l.command,q=l.multiple;if(p&&q&&d.length)e=d;else if(p&&d.length)e=d[0];else{const t=w(c,k,m,n,r);({value:e}=t);const x=t.index,y=t.length;void 0!==x&&y&&g.push({index:x,length:y})}}catch(m){return h}return void 0===e?h:{...h,[k]:e}},{});let f=c;g.forEach(({index:h,length:k})=>{Array.from({length:k}).forEach((l,e)=>{f[h+e]=null})});f=f.filter(h=>null!==h);Object.assign(a,{f});return a}(A),E=D.exclude,F=D.upgrade,G=D.help,H=D.version;const I=stream.Writable;const J=(a,b=0,c=!1)=>{if(0===b&&!c)return a;a=a.split("\n",c?b+1:void 0);return c?a[a.length-1]:a.slice(b).join("\n")},K=(a,b=!1)=>J(a,2+(b?1:0)),L=a=>{({callee:{caller:a}}=a);return a};const M=os.homedir;const N=/\s+at.*(?:\(|\s)(.*)\)?/,O=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:IGNORED_MODULES)\/.*)?\w+)\.js:\d+:\d+)|native)/,P=M(),Q=a=>{const {pretty:b=!1,ignoredModules:c=["pirates"]}={},d=c.join("|"),g=new RegExp(O.source.replace("IGNORED_MODULES",d));return a.replace(/\\/g,"/").split("\n").filter(f=>{f=f.match(N);if(null===f||!f[1])return!0;f=f[1];return f.includes(".app/Contents/Resources/electron.asar")||f.includes(".app/Contents/Resources/default_app.asar")?!1:!g.test(f)}).filter(f=>
f.trim()).map(f=>b?f.replace(N,(h,k)=>h.replace(k,k.replace(P,"~"))):f).join("\n")};function R(a,b,c=!1){return function(d){var g=L(arguments),{stack:f}=Error();const h=J(f,2,!0),k=(f=d instanceof Error)?d.message:d;g=[`Error: ${k}`,...null!==g&&a===g||c?[b]:[h,b]].join("\n");g=Q(g);return Object.assign(f?d:Error(),{message:k,stack:g})}};function S(a){var {stack:b}=Error();const c=L(arguments);b=K(b,a);return R(c,b,a)};const T=(a,b)=>{b.once("error",c=>{a.emit("error",c)});return b};class U extends I{constructor(a){const {binary:b=!1,rs:c=null,...d}=a||{},{c:g=S(!0),proxyError:f}=a||{},h=(k,l)=>g(l);super(d);this.a=[];this.b=new Promise((k,l)=>{this.on("finish",()=>{let e;b?e=Buffer.concat(this.a):e=this.a.join("");k(e);this.a=[]});this.once("error",e=>{if(-1==e.stack.indexOf("\n"))h`${e}`;else{const m=Q(e.stack);e.stack=m;f&&h`${e}`}l(e)});c&&T(this,c).pipe(this)})}_write(a,b,c){this.a.push(a);c()}get promise(){return this.b}}
const V=async a=>{({promise:a}=new U({rs:a,c:S(!0)}));return await a};const W=async a=>{const [b,c,d]=await Promise.all([new Promise((g,f)=>{a.on("error",f).on("exit",h=>{g(h)})}),a.stdout?V(a.stdout):void 0,a.stderr?V(a.stderr):void 0]);return{code:b,stdout:c,stderr:d}};function X(a){a=v("yarn",a,{shell:"win32"==process.platform,stdio:"inherit"});const b=W(a);a.promise=b;a.spawnCommand=a.spawnargs.join(" ");return a};async function Y(a=[]){var b=aa;if(null===b||void 0===b)throw Error("Package.json content is not given");const {devDependencies:c,dependencies:d}=b,g={...c,...d};b=Object.keys(g).filter(k=>!a.includes(k));const [f,h]=b.reduce(([k,l],e)=>{/^\d/.test(g[e])?k.push(e):l.push(e);return[k,l]},[[],[]]);f.length&&await Z(f,!0);h.length&&await Z(h)}const Z=async(a,b=!1)=>{a=["upgrade",...a.map(c=>`${c}@latest`),...b?["-E"]:[]];process.stdout.write(["yarn",...a,"\n"].join(" "));({promise:a}=X(a));await a};if(G){const a=C();console.log(a);process.exit(0)}else H&&(console.log(require("../../package.json").version),process.exit(0));const aa=require(u(process.cwd(),"package.json"));(async()=>{try{await Y(E?E.split(","):void 0),F&&v("yarn",["upgrade"])}catch(a){console.log(a)}})();

//# sourceMappingURL=yarn-up.js.map